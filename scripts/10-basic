#!/usr/bin/env bash
#
# Autoinstall Scripts
# Copyright (C) 2017-2024 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no

# Bash options:
set -ex


# ###########################################################################
# The "Basic" installation is based on the "Minimal" installation.
# It must contain the following packages:
# * Base64 (base64 tool)
# * [BIND Tools](https://www.isc.org/bind/) (DNS testing, particularly dig and delv commands)
# * [BWM-NG](https://github.com/vgropp/bwm-ng) (simple bandwidth monitor)
# * [BZip2](https://sourceware.org/bzip2/) (compression tool)
# * [EthTool](https://mirrors.edge.kernel.org/pub/software/network/ethtool/) (Ethernet card configuration tool; on Linux systems only!)
# * [Fail2Ban](https://github.com/fail2ban/fail2ban) (prevent brute-force SSH attacks)
# * [GDisk](https://sourceforge.net/projects/gptfdisk/) (GPT partitioning tool)
# * GrowPart (Partition growing tool; on Linux systems only!)
# * [IDN](https://www.gnu.org/software/libidn/manual/html_node/Invoking-idn.html) (Internationalised Domain Names command line tool)
# * [GNU Parallel](https://www.gnu.org/software/parallel/) (Parallel job execution)
# * [GNU Wget](https://www.gnu.org/software/wget/) (download tool)
# * [HiPerConTracer](https://www.nntb.no/~dreibh/hipercontracer/) (high-performance network tracing tool)
# * [HTop](https://htop.dev/) (process monitor)
# * [Joe](https://joe-editor.sourceforge.io/) (editor)
# * [JQ](https://jqlang.github.io/jq/) (JSON editing tool)
# * [NMap](https://nmap.org/) (network testing tool)
# * Manual page utilities (manual page viewer)
# * [NetPerfMeter](https://www.nntb.no/~dreibh/netperfmeter/) (network performance metering tool)
# * [NetPlan](https://netplan.io/) (network configuration; on Linux systems only!)
# * [OpenSSL](https://openssl.org/) (Cryptography and TLS toolkit)
# * Ping, Traceroute, ifconfig (basic networking tools)
# * [PLocate](https://plocate.sesse.net/) ("locate" command for finding files)
# * PwGen (password generator)
# * [Python](https://www.python.org/) (Python 3 interpreter)
# * [RSPLIB RSerPool](https://www.nntb.no/~dreibh/rserpool/) Tools (RSerPool testing tools)
# * [RSync](https://rsync.samba.org/) Tools (file synchronisation)
# * [SubNetCalc](https://www.nntb.no/~dreibh/subnetcalc/) (address calculator)
# * [System-Tools](https://www.nntb.no/~dreibh/system-tools/) (system information on login)
# * Tree (tree view of directory hierachy)
# * [T-Shark](https://www.wireshark.org/) (packet sniffer, CLI-version for Wireshark)
# * [UUID](http://www.ossp.org/pkg/lib/uuid/) (UUID generator)
# ###########################################################################


# ====== Package installation ===============================================

# ------ Ubuntu/Debian ------------------------------------------------------
if [ -e /usr/bin/apt-get ] ; then

   # ------ Work-around for missing System-Tools in Debian ------------------
   if [ -e /etc/os-release ] ; then
      . /etc/os-release
      if [ "${ID}" == "debian" ] ; then
         # FIXME! This is not the best solution. Ideally, there should be a
         #        Debian PPA for System-Tools!
         #        Using the packages from the Ubuntu 24.04 (Noble Numbat) PPA:
         env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y  --no-install-recommends wget
         cd /tmp
         wget -4 -r --no-parent --accept-regex '.*noble.*deb$' https://ppa.launchpadcontent.net/dreibh/ppa/ubuntu/pool/main/t/td-system-tools/
         find /tmp/ppa.launchpadcontent.net/dreibh/ppa/ubuntu/pool/main/t/ -name "*.deb" -print0 | xargs -r -0 env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends
      fi
   fi
   # ------------------------------------------------------------------------

   # PLocate is the successor of MLocate and findutils, all providing a "locate" command.
   # Try PLocate first, then MLocate, then findutils:
   env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends plocate || \
      env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends mlocate || \
         env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends findutils

   packages="
      apt-file
      bind9-dnsutils
      bwm-ng
      bzip2
      cloud-guest-utils
      curl
      ethtool
      fail2ban
      gdisk
      gpm
      hipercontracer
      htop
      idn
      iputils-ping
      joe
      jq
      make
      man
      netperfmeter
      netplan.io
      net-tools
      nmap
      openssl
      parallel
      pwgen
      python3
      rsplib-tools
      rsync
      subnetcalc
      td-system-configure-grub
      td-system-tools
      traceroute
      tree
      tshark
      uuid
      wget
   "

   # shellcheck disable=SC2086
   env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends ${packages}


# ------ Fedora -------------------------------------------------------------
elif [ -e /usr/bin/dnf ] ; then

   packages="
      bind-utils
      bwm-ng
      bzip2
      cmake
      cloud-utils-growpart
      curl
      ethtool
      fail2ban
      gdisk
      gpm
      hipercontracer
      htop
      iputils
      joe
      jq
      libidn
      make
      netperfmeter
      netplan
      netplan-default-backend-networkd
      net-tools
      nmap
      openssl
      parallel
      plocate
      pwgen
      python3
      rsplib-tools
      rsync
      subnetcalc
      td-system-tools
      td-system-tools-configure-grub
      traceroute
      tree
      uuid
      wget
      wireshark-cli
   "

   # shellcheck disable=SC2086
   /usr/bin/dnf install -y ${packages}

   # Use SystemD NetworkD:
   systemctl disable NetworkManager  || true
   systemctl disable network         || true
   systemctl enable systemd-networkd || true
   systemctl start systemd-networkd  || true
   systemctl enable systemd-resolved || true
   systemctl start systemd-resolved  || true
   rm -f /etc/resolv.conf
   ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf


# ------ FreeBSD ------------------------------------------------------------
elif [ -e /usr/sbin/pkg ] ; then

   packages="
      base64
      bind-tools
      bwm-ng
      cmake
      curl
      gawk
      gdisk
      gmake
      hipercontracer
      htop
      joe
      jq
      libidn
      netperfmeter
      nmap
      ossp-uuid
      openssl
      parallel
      plocate
      pwgen
      py311-fail2ban
      python3
      rsplib
      rsync
      subnetcalc
      td-system-tools
      tree
      wget
      wireshark-nox11
   "

   # shellcheck disable=SC2086
   /usr/sbin/pkg install -y ${packages}

fi


# ====== Verify command availability ========================================
echo "Verifying command availability:"
errors=0
for command in awk base64 bwm-ng bzip2 dig delv curl gdisk hipercontracer htop idn ifconfig joe jq locate man netperfmeter nmap openssl parallel ping pwgen python3 rspserver rspterminal rsync subnetcalc System-Info System-Maintenance traceroute tree tshark uuid wget ; do
   echo -n "${command}: "
   if which ${command} >/dev/null ; then
      echo "OK"
   else
      echo "FAILED!"
      errors=$((errors+1))
   fi
done
if [ "$(uname)" == "Linux" ] ; then
   for command in ethtool growpart netplan ; do
      echo -n "${command}: "
      if which ${command} >/dev/null ; then
         echo "OK"
      else
         echo "FAILED!"
         errors=$((errors+1))
      fi
   done
fi
if [ ${errors} -gt 0 ] ; then
   echo >&2 "ERROR: ${errors} packages are missing!"
   exit 1
fi


# ====== Enable DNSSEC ======================================================
resolvedConf=""
if [ -e /etc/systemd/resolved.conf ] ; then
   resolvedConf="/etc/systemd/resolved.conf"
elif [ -e /usr/lib/systemd/resolved.conf ] ; then
   resolvedConf="/usr/lib/systemd/resolved.conf"
fi
if [ "${resolvedConf}" != "" ] ; then
   sed -e "s/^#DNSSEC=.*$/DNSSEC=yes/g" <${resolvedConf} >${resolvedConf}.new
   mv ${resolvedConf}.new ${resolvedConf}
   service systemd-resolved restart
fi
