#!/usr/bin/env bash
#
# Autoinstall Scripts
# Copyright (C) 2017-2025 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: thomas.dreibholz@gmail.com

# Bash options:
set -eux


# ###########################################################################
# The "Basic" installation is based on the "Minimal" installation.
# It must contain the following packages:
# * [ACL](https://savannah.nongnu.org/projects/acl/) (Tools for ACL configuration, particularly getfacl and setfacl commands)
# * Base64 (base64 tool)
# * [BIND Tools](https://www.isc.org/bind/) (DNS testing, particularly dig and delv commands)
# * [BWM-NG](https://github.com/vgropp/bwm-ng) (simple bandwidth monitor)
# * [BZip2](https://sourceware.org/bzip2/) (compression tool)
# * [EthTool](https://mirrors.edge.kernel.org/pub/software/network/ethtool/) (Ethernet card configuration tool; on Linux systems only!)
# * [Fail2Ban](https://github.com/fail2ban/fail2ban) (prevent brute-force SSH attacks)
# * [GDisk](https://sourceforge.net/projects/gptfdisk/) (GPT partitioning tool)
# * GrowPart (Partition growing tool; on Linux systems only!)
# * [IDN](https://www.gnu.org/software/libidn/manual/html_node/Invoking-idn.html) (Internationalised Domain Names command line tool)
# * [GNU Parallel](https://www.gnu.org/software/parallel/) (Parallel job execution)
# * [GNU Wget](https://www.gnu.org/software/wget/) (download tool)
# * [HiPerConTracer](https://www.nntb.no/~dreibh/hipercontracer/) (high-performance network tracing tool)
# * [HTop](https://htop.dev/) (process monitor)
# * [Joe](https://joe-editor.sourceforge.io/) (editor)
# * [JQ](https://jqlang.github.io/jq/) (JSON editing tool)
# * [NMap](https://nmap.org/) (network testing tool)
# * Manual page utilities (manual page viewer)
# * [NetPerfMeter](https://www.nntb.no/~dreibh/netperfmeter/) (network performance metering tool)
# * [NetPlan](https://netplan.io/) (network configuration; on Linux systems only!)
# * [OpenSSL](https://openssl.org/) (Cryptography and TLS toolkit)
# * Ping, Traceroute, ifconfig (basic networking tools)
# * [PLocate](https://plocate.sesse.net/) ("locate" command for finding files)
# * PwGen (password generator)
# * [Python](https://www.python.org/) (Python 3 interpreter)
# * [RSPLIB RSerPool](https://www.nntb.no/~dreibh/rserpool/) Tools (RSerPool testing tools)
# * [RSync](https://rsync.samba.org/) Tools (file synchronisation)
# * [SubNetCalc](https://www.nntb.no/~dreibh/subnetcalc/) (address calculator)
# * [System-Tools](https://www.nntb.no/~dreibh/system-tools/) (system information on login)
# * [TCPDump](https://www.tcpdump.org/) (packet sniffer)
# * Tree (tree view of directory hierachy)
# * [TSCTP](https://www.nntb.no/~dreibh/tsctp/) (SCTP test tool)
# * [T-Shark](https://www.wireshark.org/) (packet sniffer, CLI-version for Wireshark)
# * [UUID](http://www.ossp.org/pkg/lib/uuid/) (UUID generator)
# * [Zip](https://infozip.sourceforge.net/Zip.html) (Zip compression tools)
# ###########################################################################


# ====== Check/set environment variables ====================================
if [ ! -e /etc/os-release ] ; then
   echo >&2 "ERROR: /etc/os-release does not exist!"
   exit 1
fi
. /etc/os-release
if [ ! -v VERSION_ID ] ; then
   VERSION_ID="99.99"
fi


# ====== Package installation ===============================================

# ------ Ubuntu/Debian ------------------------------------------------------
if [ "${ID}" == "ubuntu" ] || [ "${ID}" == "debian" ] ; then

   # ------ Add Debian FastTrack repository ---------------------------------
   if [ "${ID}" == "debian" ] ; then
      # FIXME! Debian Trixie is not released yet => no FastTrack repository!
      if [ "${VERSION_CODENAME}" != "trixie" ] && [ "${VERSION_CODENAME}" != "sid" ] ; then
         DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends fasttrack-archive-keyring
         cat >/etc/apt/sources.list.d/fasttrack.list <<EOF
deb http://fasttrack.debian.net/debian-fasttrack/ ${VERSION_CODENAME}-fasttrack main contrib
# deb-src http://fasttrack.debian.net/debian-fasttrack/ ${VERSION_CODENAME}-fasttrack main contrib
EOF
         /usr/bin/apt-get update
      fi
   fi

   if [ "${ID}" == "debian" ] ; then
      architecture="$(uname -m)"
      architecture="${architecture/x86_64/amd64}"
      architecture="${architecture/aarch64/arm64}"
      architecture="${architecture/ppc64le/ppc64el}"
      env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends wget

      # ------ Work-around for missing System-Tools in Debian ---------------
      # FIXME! This is not the best solution. Ideally, there should be a
      #        Debian PPA for System-Tools!
      #        Using the packages from the Ubuntu 24.04 (Noble Numbat) PPA:
      cd /tmp
      wget -4rq --no-parent --accept-regex '.*focal.*deb$' https://ppa.launchpadcontent.net/dreibh/ppa/ubuntu/pool/main/t/td-system-tools/
      pkg1="$(find /tmp/ppa.launchpadcontent.net/dreibh/ppa/ubuntu/pool/main/t/td-system-tools/ -name "*_all.deb")"
      pkg2="$(find /tmp/ppa.launchpadcontent.net/dreibh/ppa/ubuntu/pool/main/t/td-system-tools/ -name "*_${architecture}.deb")"
      packages="${pkg1} ${pkg2}"
      version="$(echo "${packages}" | xargs -n1 | sed -e 's/\(.*\)_\([^/-]*\)-.*$/\2/' | sort -urV | head -n1)"
      echo "${packages}"
      echo "${version}"
      packages="$(echo "${packages}" | xargs -n1 | grep "${version}")"
      echo "${packages}"
      # shellcheck disable=SC2086
      env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends ${packages}

      # ------ Work-around for missing TSCTP in Debian < 13 -----------------
      # shellcheck disable=SC2071
      if [[ "${VERSION_ID}" < "13" ]] ; then
         env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends wget
         cd /tmp
         wget -4rq --no-parent --accept-regex '.*focal.*deb$' https://ppa.launchpadcontent.net/dreibh/ppa/ubuntu/pool/main/t/tsctp/

         pkg1="$(find /tmp/ppa.launchpadcontent.net/dreibh/ppa/ubuntu/pool/main/t/tsctp/ -name "*_all.deb")"
         pkg2="$(find /tmp/ppa.launchpadcontent.net/dreibh/ppa/ubuntu/pool/main/t/tsctp/ -name "*_${architecture}.deb")"
         packages="${pkg1} ${pkg2}"
         version="$(echo "${packages}" | xargs -n1 | sed -e 's/\(.*\)_\([^/-]*\)-.*$/\2/' | sort -urV | head -n1)"
         echo "${packages}"
         echo "${version}"
         packages="$(echo "${packages}" | xargs -n1 | grep "${version}")"
         echo "${packages}"
         # shellcheck disable=SC2086
         env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends ${packages}
      fi

      rm -rf ppa.launchpadcontent.net
   fi

   packages="
      acl
      apt-file
      chrpath
      bridge-utils
      bwm-ng
      bzip2
      cloud-guest-utils
      curl
      dnsutils
      ethtool
      fail2ban
      gdisk
      gpm
      htop
      idn
      iproute2
      iptables
      iputils-ping
      joe
      jq
      make
      man
      netperfmeter
      net-tools
      nmap
      openssl
      parallel
      pwgen
      python3
      rsync
      subnetcalc
      tcpdump
      td-system-configure-grub
      td-system-tools
      traceroute
      tree
      tsctp
      tshark
      unzip
      uuid
      wget
      zip
   "

   # ------ Ubuntu ----------------------------------------------------------
   if [ "${ID}" == "ubuntu" ] && [[ "${VERSION_ID}" =~ ^1[2345]\.[01][04]$ ]] || \
      [ "${ID}" == "debian" ] && [[ "${VERSION_ID}" =~ ^1[01]$ ]] ; then
      # Old Ubuntu versions 12.04/14.04 and Debian versions 10/11
      # do not have "hipercontracer"!
      echo "NOTE: HiPerConTracer is not available in this Ubuntu/Debian version!"
   else
      packages="${packages} hipercontracer"
   fi
   if [ "${ID}" == "ubuntu" ] && [[ "${VERSION_ID}" =~ ^1[234567]\.[01][04]$ ]] ; then
      # Old Ubuntu versions 12.04/14.04/16.04 do not have "netplan"!
      echo "NOTE: NetPlan is not available in this Ubuntu version!"
   else
      packages="${packages} netplan.io"
   fi
   if [ "${ID}" == "debian" ] && [[ "${VERSION_ID}" =~ ^1[01]$ ]] ; then
      echo "NOTE: RSPLIB is not available in this Debian version!"
   else
      packages="${packages} rsplib-tools"
   fi
   if [ "${ID}" == "ubuntu" ] && [[ "${VERSION_ID}" =~ ^1[23456789]\.[01][04]$ ]] ; then
      # Old Ubuntu versions 12.04/14.04/16.04/18.04 do not have "systemd-timesyncd"!
      echo "NOTE: systemd-timesyncd is not available in this Ubuntu version!"
   else
      packages="${packages} systemd-timesyncd"
   fi
   if [ "${ID}" == "ubuntu" ] ; then
      if [[ "${VERSION_ID}" =~ ^1[2345]\.[01][04]$ ]] ; then
         echo "NOTE: delv is not available in this Ubuntu version!"
      elif [[ "${VERSION_ID}" =~ ^1[67]\.[01][04]$ ]] ; then
         # Old Ubuntu version 16.04 has "delv" is in the "bind9" package!
         packages="${packages} bind9"
      fi
   fi

   # shellcheck disable=SC2086
   env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends ${packages}

   # ------ Locate ----------------------------------------------------------
   # PLocate is the successor of MLocate and findutils, all providing a "locate" command.
   # Try PLocate first, then MLocate, then findutils:
   env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends plocate || \
      env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends mlocate || \
         env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends findutils


# ------ Fedora -------------------------------------------------------------
elif [ "${ID}" == "fedora" ] ; then

   packages="
      acl
      bind-utils
      bridge-utils
      bwm-ng
      bzip2
      chrpath
      cmake
      cloud-utils-growpart
      curl
      ethtool
      fail2ban
      gdisk
      gpm
      hipercontracer
      htop
      iproute
      iproute-tc
      iptables
      iputils
      joe
      jq
      libidn
      make
      man
      netperfmeter
      netplan
      net-tools
      nmap
      openssl
      parallel
      plocate
      pwgen
      python3
      rsplib-tools
      rsync
      subnetcalc
      tar
      tcpdump
      td-system-tools
      td-system-tools-configure-grub
      traceroute
      tree
      tsctp
      unzip
      uuid
      wget
      wireshark-cli
      zip
   "

   # shellcheck disable=SC2086
   /usr/bin/dnf install --setopt=install_weak_deps=False -y ${packages}

   if [ -e /etc/selinux/config ] ; then
      # FIXME!
      # Fedora is buggy, preventing NetworkManager startup with NetPlan:
      # https://bugzilla.redhat.com/show_bug.cgi?id=2308655
      # Work-around is to turn SELinux into "permissive" mode:
      sed -e "s/^SELINUX=.*/SELINUX=permissive/" -i /etc/selinux/config
   fi


# ------ FreeBSD ------------------------------------------------------------
elif [ "${ID}" == "freebsd" ] ; then

   packages="
      base64
      bind-tools
      bwm-ng
      chrpath
      cmake
      curl
      flock
      gawk
      gdisk
      gmake
      hipercontracer
      htop
      joe
      jq
      libidn
      netperfmeter
      nmap
      ossp-uuid
      openssl
      parallel
      plocate
      pwgen
      py311-fail2ban
      python3
      rsplib
      rsync
      subnetcalc
      tcpdump
      td-system-tools
      tree
      tsctp
      wget
      wireshark-nox11
      zip
   "

   # shellcheck disable=SC2086
   /usr/sbin/pkg install -y ${packages}


# ------ Unknown ------------------------------------------------------------
else

   echo >&2 "ERROR: Unknown ID ${ID} in /etc/os-release. The installation script may need an update for supporting this system!"
   exit 1

fi


# ====== Verify command availability ========================================

programs="awk base64 bwm-ng bzip2 chrpath curl dig flock gdisk getfacl htop idn ifconfig joe jq locate man netperfmeter nmap openssl parallel ping pwgen python3 rsync setfacl subnetcalc System-Info System-Maintenance tar tcpdump traceroute tree tsctp tshark unzip uuid wget zip"
if [ "${ID}" == "ubuntu" ] && [[ "${VERSION_ID}" =~ ^1[2345]\.[01][04]$ ]] ; then
   true
else
   programs="${programs} delv"
fi

if [ "${ID}" == "ubuntu" ] && [[ "${VERSION_ID}" =~ ^1[2345]\.[01][04]$ ]] || \
   [ "${ID}" == "debian" ] && [[ "${VERSION_ID}" =~ ^1[01]$ ]] ; then
   true
else
   programs="${programs} hipercontracer"
fi
if [ ! "${ID}" == "ubuntu" ] || [[ ! "${VERSION_ID}" =~ ^1[234567]\.[01][04]$ ]] ; then
   if [ "${ID}" != "freebsd" ] ; then
      programs="${programs} netplan"
   fi
fi
if [ "$(uname)" == "Linux" ] ; then
   programs="${programs} brctl ethtool ifconfig ip iptables growpart tc"
fi
if [ ! "${ID}" == "debian" ] || [[ ! "${VERSION_ID}" =~ ^1[01]$ ]] ; then
   packages="${packages} rspserver rspterminal"
fi

echo "Verifying command availability:"
errors=0
for command in ${programs} ; do
   echo -n "${command}: "
   if which "${command}" >/dev/null ; then
      echo "OK"
   else
      echo "FAILED!"
      errors=$((errors+1))
   fi
done
if [ ${errors} -gt 0 ] ; then
   echo >&2 "ERROR: ${errors} packages are missing!"
   exit 1
fi


# ====== Enable DNSSEC ======================================================
resolvedConf=""
if [ -e /etc/systemd/resolved.conf ] ; then
   resolvedConf="/etc/systemd/resolved.conf"
elif [ -e /usr/lib/systemd/resolved.conf ] ; then
   resolvedConf="/usr/lib/systemd/resolved.conf"
fi
if [ "${resolvedConf}" != "" ] ; then
   sed -e "s/^#DNSSEC=.*$/DNSSEC=yes/g" <${resolvedConf} >${resolvedConf}.new
   mv ${resolvedConf}.new ${resolvedConf}
   # FIXME: Not restarting the service yet, it will be active after reboot.
   # service systemd-resolved restart
fi
