#!/usr/bin/env bash
#
# Autoinstall Scripts
# Copyright (C) 2017-2024 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no

# Bash options:
set -e


# ###########################################################################
# The "Basic" installation is based on the "Minimal" installation.
# It must contain the following packages:
# - Base64 (base64 tool)
# - BWM-NG (simple bandwidth monitor)
# - BZip2 (compression tool)
# - cURL (download tool)
# - EthTool (Ethernet card configuration tool; on Linux systems only!)
# - Fail2Ban (prevent brute-force SSH attacks)
# - GDisk (GPT partitioning tool)
# - GrowPart (Partition growing tool; on Linux systems only!)
# - GNU Wget (download tool)
# - HiPerConTracer
# - HTop (process monitor)
# - Joe (editor)
# - JQ (JSON editing tool)
# - NMap (network testing tool)
# - Manual page utilities (manual page viewer)
# - NetPerfMeter (network performance metering tool)
# - NetPlan (network configuration; on Linux systems only!)
# - Ping, Traceroute, ifconfig (basic networking tools)
# - PLocate ("locate" command for finding files)
# - PwGen (password generator)
# - Python (Python 3 interpreter)
# - RSPLIB Tools (RSerPool testing tools)
# - SubNetCalc (address calculator)
# - System-Tools (system information on login)
# - Tree (tree view of directory hierachy)
# - T-Shark (CLI-version for Wireshark)
# ###########################################################################


# ====== Package installation ===============================================

# ------ Ubuntu/Debian ------------------------------------------------------
if [ -e /usr/bin/apt-get ] ; then

   # ------ Work-around for missing System-Tools in Debian ------------------
   if [ -e /etc/os-release ] ; then
      . /etc/os-release
      if [ "${ID}" == "debian" ] ; then
         # FIXME! This is not the best solution. Ideally, there should be a
         #        Debian PPA for System-Tools!
         #        Using the packages from the Ubuntu 24.04 (Noble Numbat) PPA:
         env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y  --no-install-recommends wget
         cd /tmp
         wget -4 -r --no-parent --accept-regex '.*noble.*deb$' https://ppa.launchpadcontent.net/dreibh/ppa/ubuntu/pool/main/t/td-system-tools/
         find /tmp/ppa.launchpadcontent.net/dreibh/ppa/ubuntu/pool/main/t/ -name "*.deb" -print0 | xargs -r -0 env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends
      fi
   fi
   # ------------------------------------------------------------------------

   # PLocate is the successor of MLocate and findutils, all providing a "locate" command.
   # Try PLocate first, then MLocate, then findutils:
   env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends plocate || \
      env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends mlocate || \
         env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends findutils

   packages="
      apt-file
      bwm-ng
      bzip2
      cloud-guest-utils
      curl
      ethtool
      fail2ban
      gdisk
      gpm
      hipercontracer
      htop
      iputils-ping
      joe
      jq
      make
      man
      netperfmeter
      netplan.io
      net-tools
      nmap
      pwgen
      python3
      rsplib-tools
      subnetcalc
      td-system-configure-grub
      td-system-tools
      traceroute
      tree
      tshark
      wget
   "

   # shellcheck disable=SC2086
   env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends ${packages}


# ------ Fedora -------------------------------------------------------------
elif [ -e /usr/bin/dnf ] ; then

   packages="
      bwm-ng
      bzip2
      cmake
      cloud-utils-growpart
      curl
      ethtool
      fail2ban
      gdisk
      gpm
      hipercontracer
      htop
      iputils
      joe
      jq
      make
      netperfmeter
      netplan
      netplan-default-backend-networkd
      net-tools
      nmap
      plocate
      pwgen
      python3
      rsplib-tools
      subnetcalc
      td-system-tools
      td-system-tools-configure-grub
      traceroute
      tree
      wget
      wireshark-cli
   "

   # shellcheck disable=SC2086
   /usr/bin/dnf install -y sddm ${packages}


# ------ FreeBSD ------------------------------------------------------------
elif [ -e /usr/sbin/pkg ] ; then

   packages="
      base64
      bwm-ng
      cmake
      curl
      gdisk
      gmake
      hipercontracer
      htop
      joe
      jq
      netperfmeter
      nmap
      plocate
      pwgen
      py39-fail2ban
      python3
      rsplib
      subnetcalc
      td-system-tools
      tree
      wget
      wireshark-nox11
   "

   # shellcheck disable=SC2086
   /usr/sbin/pkg install -y ${packages}

fi


# ====== Verify command availability ========================================
echo "Verifying command availability:"
errors=0
for command in awk base64 bwm-ng bzip2 curl gdisk hipercontracer htop ifconfig joe jq locate man netperfmeter nmap ping pwgen python3 rspserver rspterminal subnetcalc System-Info System-Maintenance traceroute tree tshark wget ; do
   echo -n "${command}: "
   if which ${command} >/dev/null ; then
      echo "OK"
   else
      echo "FAILED!"
      errors=$((errors+1))
   fi
done
if [ "$(uname)" == "Linux" ] ; then
   for command in ethtool growpart netplan ; do
      echo -n "${command}: "
      if which ${command} >/dev/null ; then
         echo "OK"
      else
         echo "FAILED!"
         errors=$((errors+1))
      fi
   done
fi
if [ ${errors} -gt 0 ] ; then
   echo >&2 "ERROR: ${errors} packages are missing!"
   exit 1
fi
