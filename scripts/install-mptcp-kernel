#!/usr/bin/env bash
#
# Autoinstall Scripts
# Copyright (C) 2017-2021 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no

# Bash options:
set -e


# ====== Install MPTCP kernel ===============================================

# ------ Ubuntu -------------------------------------------------------------
if [ -e /usr/bin/apt-get ] ; then
   # ====== Activate Thomas Dreibholz's MPTCP kernel repository =============
   # NOTE: Assuming that Thomas Dreibholz's MPTCP kernel repository is already
   #       configured from prepare-development-environment but commented out:
   sed -e "s@#[ ]*\(deb.* https://packages.nntb.no/nornet-kernel/ubuntu/ .*\)@\1@g" -i /etc/apt/sources.list
   /usr/bin/apt-get update

   # ====== Install MPTCP kernel packages ===================================
   mptcpKernelImagePackage=`apt-cache search mptcp | cut -d' ' -f1 | grep "^linux-image" | grep -- '-mptcp$' | sort --version-sort --field-separator=- -r | head -n1`
   if [ "${mptcpKernelImagePackage}" == "" ] ; then
      echo >&2 "ERROR: No suitable MPTCP kernel package found!"
      exit 1
   fi
   mptcpKernelHeadersPackage=`echo "${mptcpKernelImagePackage}" | sed -e "s/-image-/-headers-/g"`
   echo "MPTCP kernel image package: ${mptcpKernelImagePackage}"
   echo "MPTCP kernel headers package: ${mptcpKernelHeadersPackage}"

   env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y ${mptcpKernelImagePackage} ${mptcpKernelHeadersPackage}


   # ====== Adapt sysctl settings ==============================================
   awk '
BEGIN {
   inBlock=0
}
/^.*--- TCP settings ---.*$/ {
   inBlock=1
   print $0
   next
}
/^.*--- MPTCP settings ---.*$/ {
   inBlock=1
   print $0
   next
}
/^.*----------------.*$/ {
   inBlock=0
   print $0
   next
}
/^# sysctl -w.*$/ {
   if(inBlock == 1) {
      gsub("^# ", "", $0)
      print $0
      next
   }
}
/^.*$/ {
   print $0
}
' </etc/sysctl.conf >/etc/sysctl.conf.new
   diff /etc/sysctl.conf /etc/sysctl.conf.new || true
   mv /etc/sysctl.conf.new /etc/sysctl.conf


   # ====== DKMS ============================================================
   if dpkg-query -W virtualbox-guest-dkms >/dev/null 2>&1 ; then
      env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --reinstall virtualbox-guest-dkms
   fi


   # ====== Remove all other kernels ========================================
   kernelType="mptcp"
   kernelDiskVersion=$(ls -t /boot/vmlinuz-*-${kernelType} | sort -rV | head -n1 | sed -e "s/\/boot\/vmlinuz-//" -e "s/-${kernelType}//")

   echo "Kernel Type:         ${kernelType}"
   echo "Kernel Disk Version: ${kernelDiskVersion}"

   toBeRemoved=`apt-show-versions | awk '{ print $1 }' | sed -e "s/:.*$//g" -e "s/\/.*$//g" | grep "^linux-" | (
      while read line ; do
         if [[ $line =~ ^(linux-image-|linux-headers-|linux-modules-).*$ ]] ; then
            if [[ $line =~ ^(linux-image-${kernelDiskVersion}-${kernelType}|linux-image-extra-${kernelDiskVersion}-${kernelType}|linux-modules-${kernelDiskVersion}-${kernelType}|linux-headers-${kernelDiskVersion}-${kernelType}|linux-headers-${kernelDiskVersion}).*$ ]] ; then
               true
            elif [[ $line =~ ^(linux-image-${kernelType}|linux-image-extra-${kernelType}|linux-headers-${kernelType}|linux-modules-${kernelType})$ ]] ; then
               true
            else
               echo -n "${line} "
            fi
         fi
      done
   )`

   echo -e "To be removed:"
   echo "$toBeRemoved" | xargs -n1 | grep -v ".*+$" | sort -u
   env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get autoremove -y -qq --purge \
      -o Dpkg::Options::="--force-confold" -o Dpkg::Options::="--force-confdef" \
      $toBeRemoved

# ------ Fedora -------------------------------------------------------------
elif [ -e /usr/bin/dnf ] ; then

   true   # TDB!

fi
