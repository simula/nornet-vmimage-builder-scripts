#!/usr/bin/env bash
#
# Autoinstall Scripts
# Copyright (C) 2017-2025 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: thomas.dreibholz@gmail.com

# Bash options:
set -eux


# ###### Run a command, retry multiple times in case of an error ############
try-hard ()
{
   local max_trials=$1
   local delay=$2
   shift 2

   local trial=0
   while true ; do
      trial=$(( trial+1 ))
      echo "Trial ${trial}: $*"
      # shellcheck disable=SC2068
      $@ && return 0
      if [ ${trial} -ge "${max_trials}" ] ; then
         exit 1
      fi
      echo "Waiting ${delay} s before next try ..."
      sleep "${delay}"
   done
}


# ###### Clone or update Git repository #####################################
clone-or-update ()
{
   local repository="$1"
   local url="$2"
   local clone_maxtrials=10
   local clone_delay=60
   if [ ! -e "${repository}" ] ; then
      try-hard ${clone_maxtrials} ${clone_delay}   sudo -u "${USER_NAME}" git clone "${url}" "${repository}"
   else
      pushd "${repository}"
      try-hard ${clone_maxtrials} ${clone_delay}   sudo -u "${USER_NAME}" git fetch --all
      try-hard ${clone_maxtrials} ${clone_delay}   sudo -u "${USER_NAME}" git pull
      popd
   fi
}


# ====== Check environment variables ========================================
if [ ! -v USER_NAME ] || [ "${USER_NAME}" == "" ] ; then
   echo >&2 "Usage: env USER_NAME=<user> $0"
   echo >&2 "Example: sudo env USER_NAME=nornetpp $0"
   exit 1
fi
if [ ! -e /etc/os-release ] ; then
   echo >&2 "ERROR: /etc/os-release is not available!"
   exit 1
fi
. /etc/os-release


# ====== Prepare source repositories ========================================
sudo -u "${USER_NAME}" mkdir -p "/home/${USER_NAME}/src"
cd "/home/${USER_NAME}/src"

clone-or-update neat https://dreibh@github.com/NEAT-project/neat
# pushd neat
# git checkout dreibh/neat-socketapi
# popd

clone-or-update neat-stuff    https://dreibh@bitbucket.org/dreibh/neat-stuff
clone-or-update neat-examples https://dreibh@bitbucket.org/dreibh/neat-examples
clone-or-update usrsctp-neat  https://dreibh@github.com/dreibh/usrsctp.git
pushd usrsctp-neat
git checkout dreibh/usrsctpForNeat-packaging
git remote add upstream-sctplib https://github.com/sctplab/usrsctp.git                  || true
git remote add upstream-neat    https://dreibh@github.com/NEAT-project/usrsctp-neat.git || true
popd


# ====== Package installation ===============================================

# ------ Debian -------------------------------------------------------------
if [ "${ID}" == "debian" ] ; then

   # FIXME! Work-around for NEAT Stuff not (yet) in Debian:
   cores=$(getconf _NPROCESSORS_ONLN 2>/dev/null || echo "1")

   cd "/home/${USER_NAME}/src/neat"
   env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get build-dep .

   cd "/home/${USER_NAME}/src/neat-stuff"
   sudo -u "${USER_NAME}" cmake . -DCMAKE_INSTALL_PREFIX=/usr
   sudo -u "${USER_NAME}" make -j"${cores}"
   make install

   mkdir -p /boot/NEAT
   cp /usr/share/neat-desktop/splash/NEAT*1-*.jpeg /boot/NEAT
   update-grub

# ------ Ubuntu -------------------------------------------------------------
elif [ "${ID}" == "ubuntu" ] ; then

   packages="
      neat-desktop
      neat-development
   "

   # shellcheck disable=SC2086
   env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends ${packages}

# ------ Fedora -------------------------------------------------------------
elif [ "${ID}" == "fedora" ] ; then

   packages="
      neat-stuff-desktop
      neat-stuff-development
   "

   # shellcheck disable=SC2086
   /usr/bin/dnf install -y ${packages}

# ------ FreeBSD ------------------------------------------------------------
elif [ "${ID}" == "freebsd" ] ; then

   packages="
      jansson
      ldns
      swig
      uv
   "

   # shellcheck disable=SC2086
   /usr/sbin/pkg install -y ${packages}

   # FIXME! Work-around for RSerPool Demo not (yet) in FreeBSD Ports Collection:
   cores=$(sysctl -a | grep 'hw.ncpu' | cut -d ':' -f2 | tr -d ' ' || echo "1")
   cd "/home/${USER_NAME}/src/neat-stuff"
   sudo -u "${USER_NAME}" cmake . -DCMAKE_INSTALL_PREFIX=/usr/local
   sudo -u "${USER_NAME}" make -j"${cores}"
   make install
   if [ ! -e /usr/share/neat-stuff ] ; then
      sudo ln -s /usr/local/share/neat-stuff /usr/share/neat-stuff
   fi
   if [ ! -e /usr/share/neat-desktop ] ; then
      sudo ln -s /usr/local/share/neat-desktop /usr/share/neat-desktop
   fi

# ------ Unknown ------------------------------------------------------------
else

   echo >&2 "ERROR: Unknown ID ${ID} in /etc/os-release. The installation script may need an update for supporting this system!"
   exit 1

fi
