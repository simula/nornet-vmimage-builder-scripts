#!/usr/bin/env bash
#
# Autoinstall Scripts
# Copyright (C) 2017-2025 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: thomas.dreibholz@gmail.com

# Bash options:
set -eux


# ====== Check/set environment variables ====================================
if [ ! -e /etc/os-release ] ; then
   echo >&2 "ERROR: /etc/os-release does not exist!"
   exit 1
fi
. /etc/os-release
UNAME="$(uname)"
HYPERVISOR=" $(virt-what | xargs) "


# ====== Package installation ===============================================

# ------ Ubuntu/Debian ------------------------------------------------------
if [ "${ID}" == "ubuntu" ] || [ "${ID}" == "debian" ] ; then

   # ------ Prevent suspend/hibernation -------------------------------------
   if [ "${HYPERVISOR}" != "" ] ; then
      if [ -e /etc/systemd/sleep.conf ] ; then
         sed -e "s/^#AllowSuspend=.*$/AllowSuspend=no/" \
            -e "s/^#AllowHibernation=.*$/AllowHibernation=no/" \
            -i /etc/systemd/sleep.conf
      fi
   fi

   # ------ VirtualBox ------------------------------------------------------
   if [[ "${HYPERVISOR}" =~ " virtualbox " ]] ; then
      # NOTE: virtualbox-guest-dkms is obsolete now!
      env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends \
         virtualbox-guest-utils || true
      if [ -e /usr/lib/systemd/system/sddm.service ] ; then
         # System has X11 -> also install X11 utilities as well:
         env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends \
            virtualbox-guest-x11 || true
      fi
   # ------ vSphere ---------------------------------------------------------
   elif [[ "${HYPERVISOR}" =~ " vmware " ]] ; then
      env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends \
         open-vm-tools
      if [ -e /usr/lib/systemd/system/sddm.service ] ; then
         # System has X11 -> also install X11 utilities as well:
         env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends \
            open-vm-tools-desktop || true
      fi
   # ------ QEMU ------------------------------------------------------------
   elif [[ "${HYPERVISOR}" =~ " kvm " ]] ; then
      env DEBIAN_FRONTEND=noninteractive /usr/bin/apt-get install -y --no-install-recommends \
         qemu-guest-agent
   fi

   # ------ Not in QEMU -> remove qemu-guest-agent --------------------------
   if [[ ! "${HYPERVISOR}" =~ " kvm " ]] ; then
      # NOTE: qemu-guest-agent may have been installed as part of th
      #       initial setup, since e.g. the Proxmox builder may expect it!
      /usr/bin/apt-get autoremove -y --purge qemu-guest-agent
   fi

   # ------ Not in QEMU -> remove open-vm-tools -----------------------------
   if [ ! "${HYPERVISOR}" == "vmware" ] ; then
      /usr/bin/apt-get autoremove -y --purge open-vm-tools
   fi


# ------ Fedora -------------------------------------------------------------
elif [ "${ID}" == "fedora" ] ; then

   # ------ VirtualBox ------------------------------------------------------
   if [[ "${HYPERVISOR}" =~ " virtualbox " ]] ; then
      /usr/bin/dnf install -y virtualbox-guest-additions
   # ------ vSphere ---------------------------------------------------------
   elif [ "${HYPERVISOR}" == "vmware" ] ; then
      /usr/bin/dnf install -y open-vm-tools
      if [ -e /usr/lib/systemd/system/sddm.service ] ; then
         # System has X11 -> also install X11 utilities as well:
         /usr/bin/dnf install -y open-vm-tools-desktop
      fi
   # ------ QEMU ------------------------------------------------------------
   elif [[ "${HYPERVISOR}" =~ " kvm " ]] ; then
      /usr/bin/dnf install -y qemu-guest-agent
   fi

   # ------ Not in QEMU -> remove qemu-guest-agent --------------------------
   if [[ ! "${HYPERVISOR}" =~ " kvm " ]] ; then
      # NOTE: qemu-guest-agent may have been installed as part of th
      #       initial setup, since e.g. the Proxmox builder may expect it!
      /usr/bin/dnf remove -y qemu-guest-agent
   fi


# ------ FreeBSD ------------------------------------------------------------
elif [ "${ID}" == "freebsd" ] ; then

   # ------ VirtualBox ------------------------------------------------------
   if [[ "${HYPERVISOR}" =~ " virtualbox " ]] ; then
      /usr/sbin/pkg install -y virtualbox-ose-additions
      sysrc vboxguest_enable="YES"   ; service vboxguest   start || true
      sysrc vboxservice_enable="YES" ; service vboxservice start || true
   # ------ vSphere ---------------------------------------------------------
   elif [ "${HYPERVISOR}" == "vmware" ] ; then
      if [ -e /usr/lib/systemd/system/sddm.service ] ; then
         # System has X11 -> also install X11 utilities as well:
         /usr/sbin/pkg install -y open-vm-tools
      else
         /usr/sbin/pkg install -y open-vm-tools-nox11
      fi
      sysrc vmware_guestd_enable="YES" ; service vmware-guestd start || true
   # ------ QEMU ------------------------------------------------------------
   elif [[ "${HYPERVISOR}" =~ " kvm " ]] ; then
      /usr/sbin/pkg install -y qemu-guest-agent
      sysrc qemu_guest_agent_enable="YES" ; service qemu-guest-agent start || true
   fi

   # ------ Not in QEMU -> remove qemu-guest-agent --------------------------
   if [[ ! "${HYPERVISOR}" =~ " kvm " ]] ; then
      # NOTE: qemu-guest-agent may have been installed as part of the
      #       initial setup, since e.g. the Proxmox builder expects it!
      /usr/sbin/pkg remove -y qemu-guest-agent
      sysrc -x qemu_guest_agent_enable
   fi


# ------ Unknown ------------------------------------------------------------
else

   echo >&2 "ERROR: Unknown ID ${ID} in /etc/os-release. The installation script may need an update for supporting this system!"
   exit 1

fi


# ====== Fix for multipathd error messages ==================================
if [ "${UNAME}" == "Linux" ] ; then
   cat <<EOF | tee -a /etc/multipath.conf

blacklist {
devnode "^sd[a-z]"
}
EOF
fi
