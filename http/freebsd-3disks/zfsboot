#!/bin/sh -x
# FreeBSD Autoinstall Configuration
# Copyright (C) 2024 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no


# ###### Partitioning #######################################################

# ZFS pool names:
zfsRootPool="zroot"
zfsHomePool="zhome"

# ====== Find disks =========================================================
DISK_ROOT=""
for d in ada0 da0 vtbd0; do
  if [ -e "/dev/$d" ]; then
    export DISK_ROOT=$d
    break
  fi
done
if [ "$DISK_ROOT" == "" ] ; then
   echo >&2 "ERROR: Root disk not found!"
   exit 1
fi

DISK_HOME=""
for d in ada1 da1 vtbd1; do
  if [ -e "/dev/$d" ]; then
    export DISK_HOME=$d
    break
  fi
done
if [ "$DISK_HOME" == "" ] ; then
   echo >&2 "ERROR: Home disk not found!"
   exit 1
fi

DISK_SWAP=""
for d in ada2 da2 vtbd2; do
  if [ -e "/dev/$d" ]; then
    export DISK_SWAP=$d
    break
  fi
done
if [ "$DISK_SWAP" == "" ] ; then
   echo >&2 "ERROR: Swap disk not found!"
   exit 1
fi

echo "root=$DISK_ROOT home=$DISK_HOME swap=$DISK_SWAP"


# ====== Just make sure that the script can run multiple times ==============
umount /mnt/usr/home/$zfsRootPool/home /mnt/usr/home/$zfsHomePool
while umount /mnt ; do true ; done

zpool destroy $zfsRootPool 2>/dev/null || true
gpart delete -i 2 $DISK_ROOT 2>/dev/null || true
gpart delete -i 1 $DISK_ROOT 2>/dev/null || true
gpart destroy -F $DISK_ROOT  2>/dev/null || true

zpool destroy $zfsHomePool 2>/dev/null || true
gpart delete -i 1 $DISK_HOME 2>/dev/null || true
gpart destroy -F $DISK_HOME  2>/dev/null || true

gpart delete -i 1 $DISK_SWAP 2>/dev/null || true
gpart destroy -F $DISK_SWAP  2>/dev/null || true


# ====== Prepare root disk ==================================================
gpart create -s gpt $DISK_ROOT
gpart add -a 4k -s 32M -t efi  -l EFI  $DISK_ROOT
gnop create -S 4096 /dev/gpt/EFI
gpart add -a 4k -t freebsd-zfs -l Root $DISK_ROOT
gnop create -S 4096 /dev/gpt/Root

# ------ Create EFI Boot ----------------------------------------------------
newfs_msdos -F 16 -c 1 /dev/gpt/EFI
mount -t msdosfs -o longnames /dev/gpt/EFI /mnt
mkdir -p /mnt/EFI/BOOT
cp /boot/loader.efi /mnt/EFI/BOOT/BOOTX64.efi

# ------ Create ZFS Root ----------------------------------------------------
zpool create -f -o altroot=/mnt -o cachefile=/var/tmp/zpool.cache $zfsRootPool /dev/gpt/Root.nop

# ------ Configure ZFS Root -------------------------------------------------
# -> https://wiki.freebsd.org/RootOnZFS/GPTZFSBoot
zfs set compress=on                                            $zfsRootPool

zfs create -o mountpoint=none                                  $zfsRootPool/ROOT
zfs create -o mountpoint=none                                  $zfsRootPool/ROOT/default
mount -t tmpfs tmpfs /mnt
mount -t zfs $zfsRootPool/ROOT/default /mnt

zfs create -o mountpoint=/tmp  -o exec=on      -o setuid=off   $zfsRootPool/tmp
zfs create -o canmount=off -o mountpoint=/usr                  $zfsRootPool/usr
# zfs create                                                   $zfsRootPool/usr/home
zfs create                     -o exec=off     -o setuid=off   $zfsRootPool/usr/src
zfs create                                                     $zfsRootPool/usr/obj
zfs create -o mountpoint=/usr/ports            -o setuid=off   $zfsRootPool/usr/ports
zfs create                     -o exec=off     -o setuid=off   $zfsRootPool/usr/ports/distfiles
zfs create                     -o exec=off     -o setuid=off   $zfsRootPool/usr/ports/packages
zfs create -o canmount=off -o mountpoint=/var                  $zfsRootPool/var
zfs create                     -o exec=off     -o setuid=off   $zfsRootPool/var/audit
zfs create                     -o exec=off     -o setuid=off   $zfsRootPool/var/crash
zfs create                     -o exec=off     -o setuid=off   $zfsRootPool/var/log
zfs create -o atime=on         -o exec=off     -o setuid=off   $zfsRootPool/var/mail
zfs create                     -o exec=on      -o setuid=off   $zfsRootPool/var/tmp

ln -s /usr/home /mnt/home
chmod 1777 /mnt/var/tmp
chmod 1777 /mnt/tmp

zpool set bootfs=$zfsRootPool/ROOT/default $zfsRootPool


# ====== Prepare home disk ==================================================
gpart create -s gpt $DISK_HOME
gpart add -a 4k -t freebsd-zfs -l Home $DISK_HOME
gnop create -S 4096 /dev/gpt/Home

zpool create -f -o altroot=/mnt -o cachefile=/var/tmp/zpool.cache $zfsHomePool /dev/gpt/Home.nop

# ------ Configure home -----------------------------------------------------
# -> https://wiki.freebsd.org/RootOnZFS/GPTZFSBoot
zfs set compress=on                                            $zfsHomePool

zfs create -o mountpoint=none                                  $zfsHomePool/HOME
zfs create -o mountpoint=/usr/home                             $zfsHomePool/HOME/default
mount -t zfs $zfsHomePool/HOME/default /mnt/usr/home


# ====== Prepare swap disk ==================================================
gpart create -s gpt $DISK_SWAP
gpart add -a 4k -t freebsd-swap -l Swap $DISK_SWAP
gnop create -S 4096 /dev/gpt/Swap


# ====== Make ZFS Home pool available in new system =========================
zpool export $zfsHomePool
chroot /mnt zpool import $zfsHomePool


# ====== Create fstab =======================================================
cat <<EOF >/tmp/bsdinstall_etc/fstab
# Device          Mountpoint     FStype      Options     Dump     Pass#
/dev/gpt/EFI      /boot/efi      msdosfs     rw          2        2
/dev/gpt/Swap     none           swap        sw          0        0
EOF

# ====== Checks =============================================================
camcontrol devlist
gpart show -p $DISK_ROOT
gpart show -p $DISK_HOME
gpart show -p $DISK_SWAP
zpool list
