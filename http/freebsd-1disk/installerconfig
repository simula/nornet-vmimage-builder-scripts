# FreeBSD Autoinstall Configuration
# Copyright (C) 2019-2023 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no

# Documentation:
# Example: https://github.com/stblassitude/packer-freebsd


DISTRIBUTIONS="kernel.txz base.txz"

for d in ada0 da0 vtbd0; do
  if [ -e "/dev/$d" ]; then
    export ZFSBOOT_DISKS=$d
    break
  fi
done
unset d

ZFSBOOT_BEROOT_NAME=ROOT
ZFSBOOT_BOOTFS_NAME=default
ZFSBOOT_DATASETS="
 # DATASET OPTIONS (comma or space separated; or both)

 # Boot Environment [BE] root and default boot dataset
 /$ZFSBOOT_BEROOT_NAME    mountpoint=none
 /$ZFSBOOT_BEROOT_NAME/$ZFSBOOT_BOOTFS_NAME mountpoint=/

 # Compress /tmp, allow exec but not setuid
 /tmp  mountpoint=/tmp,exec=on,setuid=off

 # Don't mount /usr so that 'base' files go to the BEROOT
 /usr  mountpoint=/usr,canmount=off

 # Home directories separated so they are common to all BEs
 /home  mountpoint=/home

 # Ports tree
 /usr/ports setuid=off

 # Source tree (compressed)
 /usr/src

 # Create /var and friends
 /var  mountpoint=/var,canmount=off
 /var/audit exec=off,setuid=off
 /var/crash exec=off,setuid=off
 /var/log exec=off,setuid=off
 /var/mail atime=on
 /var/tmp setuid=off
" # END-QUOTE

export nonInteractive="YES"


#!/bin/sh

set -e

# ====== Basic configuration ================================================

# /etc/resolv.conf is not initialised here, since this code is called from
# within the installer environment. Using OpenDNS servers here:
(
   echo "nameserver 208.67.222.222"
   echo "nameserver 208.67.220.220"
) >/etc/resolv.conf

sysrc sshd_enable="YES"
interface="`ifconfig -l | cut -d' ' -f1`"
sysrc ifconfig_$interface="dhcp"

echo 'autoboot_delay="5"' >>/boot/loader.conf


# ====== Keymap =============================================================
(
   echo 'hostname="<SET_HOSTFQDN_HERE>"'
   echo 'keymap="<SET_XKBLAYOUT_HERE>"'
   echo 'moused_enable="YES"'
   echo 'allscreens_flags="-m on"'
   echo ''
   echo 'powerd_enable="YES"'
   echo 'ntpd_enable="YES"'
   echo 'hald_enable="YES"'
   echo ''
) >>/etc/rc.conf


# ====== UTF-8 ==============================================================
# Enable Newcons:
echo 'kern.vty=vt' >>/boot/loader.conf

# Enable SCTP support:
echo 'sctp_load="YES"' >>/boot/loader.conf

# Enable UTF-8:
sed -e $'s#default:\\\\#default:\\\\\\\n\\\t:charset=UTF-8:\\\\\\\n\\\t:lang=C.UTF-8:\\\\#g' </etc/login.conf >/etc/login.conf.new
mv /etc/login.conf.new /etc/login.conf
cap_mkdb /etc/login.conf


# ====== Basic packages =====================================================

# Run freebsd-update:
env PAGER=cat freebsd-update -v debug --not-running-from-cron fetch install || true

# Initialise package database. pkg will ask whether to initialise,
# ASSUME_ALWAYS_YES=YES is necessary to prevent this! "-y" does *not* work!
env ASSUME_ALWAYS_YES=YES pkg bootstrap -f

# Install some basic packages:
pkg update
pkg upgrade -y
pkg install -y autoconf automake bash curl bwm-ng cmake gcc gmake gnupg git hipercontracer htop joe libtool netperfmeter python subnetcalc sudo td-system-tools virt-what wget

# QEMU installs already need qemu-guest-agent before first boot:
if [ "$(/usr/local/sbin/virt-what)" == "kvm" ] ; then
   pkg install -y qemu-guest-agent
   sysrc qemu_guest_agent_enable="YES" ; service qemu-guest-agent start || true
fi


# ====== User ===============================================================
echo "<SET_PASSWORD_HERE>" | pw useradd -u 1000 -n <SET_USERNAME_HERE> -h 0 -s /bin/sh -G wheel -c "<SET_REALNAME_HERE>" -m

mkdir -p /usr/local/etc/sudoers.d
echo "<SET_USERNAME_HERE> ALL=(ALL) NOPASSWD: ALL" >/usr/local/etc/sudoers.d/<SET_USERNAME_HERE>
chmod 0440 /usr/local/etc/sudoers.d/<SET_USERNAME_HERE>
chsh -s /usr/local/bin/bash <SET_USERNAME_HERE>


# ====== Reboot =============================================================

# Set boot order to boot from HDD, not from installer CD-ROM:
efibootmgr -o 0002,0001,0003,0004

# Reboot into the freshly installed system:
reboot
