#!/bin/bash

set -e

# Debian Images Key: https://keyring.debian.org/
gpg --quiet --keyserver hkp://keyring.debian.org --recv-keys 0xDF9B9C49EAA9298432589D76DA87E80D6294BE9B



function output ()
{
   echo -en "\x1b[34m"
   echo "${system} ${latestMajor}.${latestMinor}:"
   echo "   * URL: ${latestURL}"
   if curl --silent --head --max-redirs 3 "${latestURL}" >/dev/null ; then
      echo "     URL OKAY!"
   fi
   echo "   * Checksum: ${algorithm}:${latestChecksum}"
   echo -en "\x1b[0m"
}


# ###### Find ISOs ##########################################################
function find-isos ()
{
   echo "Checking for $major.$minor ..."

   location=""
   iso="${iso1}"
   rm -f "${checksums}"
   if wget -q "${location1}/${checksums}" -O "${checksums}" ; then
      location="${location1}"
   elif [ "${location2}" != "" ] && wget -q "${location2}/${checksums}" -O "${checksums}" ; then
      location="${location2}"
   elif [[ "${major}" =~ [\.] ]] ; then   # Ubuntu version: e.g. 24.04
      if [ "${minor}" -eq 0 ] ; then
         echo "L=$location2"
         l=$(echo "${location2}" | sed -e 's/[\.]0\([-/]\)/\1/g' -e 's/\.0$//')
         echo "L=$l"
         if wget -q "${l}/${checksums}" -O "${checksums}" ; then
            location="${l}"
            iso=$(echo "${iso1}" | sed -e 's/[\.]0\([-/]\)/\1/g' -e 's/\.0$//')
         fi
      fi
   fi
   if [ "${location}" != "" ] ; then
      if [ "${signature}" != "" ] ; then
         rm -f "${signature}"
         if wget -q "${location}/${signature}" -O "${signature}" ; then
            if ! gpg --verify "${signature}" "${checksums}" ; then
               return 1
            fi
         else
            return 1
         fi
      fi

      latestURL="${location}/${iso}"
      if [[ "${checksums}" =~ FreeBSD ]] ; then
         latestChecksum="$(grep "${iso}" "${checksums}" | sed -e 's/^.* = //g')"
      else
         latestChecksum="$(grep "${iso}$" "${checksums}" | cut -d' ' -f1)"
      fi
      latestMajor=${major}
      latestMinor=${minor}

      let minor=$((minor+1))
   else
      if [ ${minor} -gt 0 ] ; then
         output
      else
         return 1
      fi
      if [[ "${major}" =~ [\.] ]] ; then   # Ubuntu version: e.g. 24.04
         a="${major//[\.]*/}"
         b="${major//[0-9]*\./}"

         # NOTE: Iterating LTS versions only!
         a=$((a+2))
         major="${a}.${b}"
      else
         major=$((major+1))   # Debian version: just a number
      fi
      minor=0
   fi
}


# ###### Find Debian ISOs ###################################################
function find-debian-isos ()
{
   major=10
   minor=13
   latestLocation=""
   latestChecksum=""
   latestMajor=""
   latestMinor=""
   while [ true ] ; do
      system="Debian"
      location1="https://cdimage.debian.org/cdimage/archive/${major}.${minor}.0/amd64/iso-cd"
      location2="https://cdimage.debian.org/cdimage/release/${major}.${minor}.0/amd64/iso-cd"
      iso1="debian-${major}.${minor}.0-amd64-netinst.iso"
      algorithm="sha512"
      checksums="SHA512SUMS"
      signature="SHA512SUMS.sign"
      find-isos
    done
}


# ###### Find Ubuntu ISOs ###################################################
function find-ubuntu-isos ()
{
   major=20.04
   minor=6
   latestLocation=""
   latestChecksum=""
   latestMajor=""
   latestMinor=""
   while [ true ] ; do
      system="Ubuntu"
      location1="https://releases.ubuntu.com/${major}.${minor}"
      location2="https://old-releases.ubuntu.com/releases/${major}.${minor}"
      iso1="ubuntu-${major}.${minor}-live-server-amd64.iso"
      algorithm="sha256"
      checksums="SHA256SUMS"
      signature="SHA256SUMS.gpg"
      find-isos
    done
}


# ###### Find Fedora ISOs ###################################################
function find-fedora-isos ()
{
   major=38

   location="https://mirrors.xtom.de/fedora/releases/${major}/Server/x86_64/iso"


   rm -rf "F${major}"
   wget -P "F${major}" --recursive --no-parent --level 1 --accept-regex '.*-CHECKSUM$' "${location}"

   checksums="$(find "F${major}" -name "*-CHECKSUM" | head -n1)"

   gpg --verify "$(checksums)"

#    minor=0
#    latestLocation=""
#    latestChecksum=""
#    latestMajor=""
#    latestMinor=""
#    while [ true ] ; do
#       system="Ubuntu"
#       location1="https://mirrors.xtom.de/fedora/releases/${major}/Server/x86_64/iso"
#       https://mirrors.xtom.de/fedora/releases/39/Server/x86_64/iso/Fedora-Server-39-1.5-x86_64-CHECKSUM
#       location2="""
#       iso1="ubuntu-${major}.${minor}-live-server-amd64.iso"
#       algorithm="sha256"
#       checksums="SHA256SUMS"
#       signature="SHA256SUMS.gpg"
#       find-isos
#     done
}


# ###### Find FreeBSD ISOs ##################################################
function find-freebsd-isos ()
{
   major=13
   minor=3
   variant="$1"
   latestLocation=""
   latestChecksum=""
   latestMajor=""
   latestMinor=""
   while [ true ] ; do
      system="FreeBSD"
      location1="https://download.freebsd.org/ftp/releases/ISO-IMAGES/${major}.${minor}"
      location2=""
      iso1="FreeBSD-${major}.${minor}-${variant}-amd64-disc1.iso"
      algorithm="sha512"
      checksums="CHECKSUM.SHA512-FreeBSD-${major}.${minor}-${variant}-amd64"
      signature=""
      find-isos
    done
}



# ###### Main program #######################################################
# find-ubuntu-isos
# find-debian-isos
# find-freebsd-isos RELEASE
find-fedora-isos

