#!/usr/bin/env bash
#
# Template VM Image Builder
# Copyright (C) 2017-2024 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no

set -e

SSH_PROXY="10.1.1.51"
DESTINATIONS="nornetpp@10.132.11.8:images/"   # "nornetpp@odin.simula.nornet:images/ nornetpp@openstack.simula.nornet:images/"
WEBSERVER="nornetpp@kirkeveien.simula.nornet:/filesrv/adm/packages/openstack/"

source ./directories.config


readmeFile=$(realpath files/5gVINNI/README.html)

imageFiles=""
VMs=$(find ${OUTPUT_DIRECTORY} -mindepth 1 -maxdepth 1 -type d -name "QEMU*OpenStack*")
for vm in ${VMs} ; do
   pushd "${vm}" >/dev/null
   if [ -e "successfully-built.txt" ] ; then
      imageDirectory=$(find . -mindepth 1 -maxdepth 1 -type d -name "*OpenStack*")
      if [ -d "${imageDirectory}" ] ; then
         pushd "${imageDirectory}" >/dev/null
         imageFile=$(find . -name "*.qcow2" -printf "%f")
         if [ -e "${imageFile}" ] ; then
            vmDate=$(date -r "${imageFile}" +"%Y-%m-%d")
            imageFiles="${imageFiles} ${imageFile}"

            # ====== Copy to OpenStack Controllers ==========================
            for destination in ${DESTINATIONS} ; do
               echo  "rsync -e \"ssh -J ${SSH_PROXY}\" -z --archive --partial --info=progress2 $(realpath "${imageFile}") ${destination}${imageFile}"
               sh -c "rsync -e \"ssh -J ${SSH_PROXY}\" -z --archive --partial --info=progress2 $(realpath "${imageFile}") ${destination}${imageFile}"
            done

            # ====== Copy to web server =====================================
            if [ -e "${imageFile}.xz" ] ; then
               if [ ! -e "${imageFile}.xz".asc ] ; then
                  gpg -sab "${imageFile}.xz"
               fi
               echo  "rsync -e \"ssh -J ${SSH_PROXY}\" --archive --partial --info=progress2 $(realpath "${imageFile}".xz) $(realpath "${imageFile}".xz.asc) ${readmeFile} ${WEBSERVER}${vmDate}/"
               sh -c "rsync -e \"ssh -J ${SSH_PROXY}\" --archive --partial --info=progress2 $(realpath "${imageFile}".xz) $(realpath "${imageFile}".xz.asc) ${readmeFile} ${WEBSERVER}${vmDate}/"
            fi

         fi
         popd >/dev/null
      fi
   fi
   popd >/dev/null
   # sleep 1
done
wait


echo ""
echo "------ OpenStack commands: ------"
for imageFile in ${imageFiles} ; do
   imageName="${imageFile/.qcow2/}"
   echo "image delete ${imageName}"
   echo "image create ${imageName} --file images/${imageFile} --disk-format qcow2 --container-format bare --property hw_firmware_type=uefi --property architecture=amd64 --public"
done
