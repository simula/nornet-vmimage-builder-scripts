#!/usr/bin/env bash
#
# Template VM Image Builder
# Copyright (C) 2017-2024 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no

set -e


# Debian Images Key: https://keyring.debian.org/
# gpg --quiet --keyserver hkp://keyring.debian.org --recv-keys 0xDF9B9C49EAA9298432589D76DA87E80D6294BE9B

# Fedora Image Keys:
# curl https://fedoraproject.org/fedora.gpg | gpg --import


# ###### Process result #####################################################
function process-result ()
{
   echo -en "\x1b[34m"
   echo "${system} ${latestMajor}.${latestMinor}:"
   echo -n "   * URL: ${latestURL}"
   if curl --silent --head --max-redirs 3 "${latestURL}" >/dev/null ; then
      echo "   OK!"
   fi
   echo "   * Checksum: ${algorithm}:${latestChecksum}"
   echo -en "\x1b[0m"

   if [ "${system}" == "FreeBSD" ] ; then
      systemJSON="installer/${system,,}-${latestMajor}.${latestMinor}-${variant}.json"
   else
      systemJSON="installer/${system,,}-${latestMajor}.json"
   fi
   if [ ! -e "${systemJSON}" ] ; then
      echo >&2 "ERROR: No JSON ${systemJSON} for ${system} ${latestMajor}.${latestMinor}!"
      exit 1
   fi


   sed -e  "s@\(\"iso_url\": \"\)\([^\"]*\)@\\1${latestURL}@g" \
       -e  "s@\(\"iso_checksum\": \"\)\([^\"]*\)@\\1${algorithm}:${latestChecksum}@g" \
       <"${systemJSON}" >"${systemJSON}.updated"
   if ! diff --color "${systemJSON}" "${systemJSON}.updated" ; then
      echo "Updated!"
      mv "${systemJSON}.updated" "${systemJSON}"
   else
      echo "Already up-to-date."
      rm "${systemJSON}.updated"
   fi
}


# ###### Find ISOs ##########################################################
function find-isos ()
{
   echo "Checking for ${major}.${minor} ..."

   # ====== Look for checksums file =========================================
   location=""
   iso="${iso1}"
   rm -f "${checksums}"
   if wget -q "${location1}/${checksums}" -O "${checksums}" ; then
      location="${location1}"
   elif [ "${location2}" != "" ] && wget -q "${location2}/${checksums}" -O "${checksums}" ; then
      location="${location2}"
   elif [[ "${major}" =~ [\.] ]] ; then   # Ubuntu version: e.g. 24.04
      if [ "${minor}" -eq 0 ] ; then
         l=$(echo "${location2}" | sed -e 's/[\.]0\([-/]\)/\1/g' -e 's/\.0$//')
         if wget -q "${l}/${checksums}" -O "${checksums}" ; then
            location="${l}"
            iso=$(echo "${iso1}" | sed -e 's/[\.]0\([-/]\)/\1/g' -e 's/\.0$//')
         fi
      fi
   fi

   # ====== There is a checksums file =======================================
   if [ "${location}" != "" ] ; then

      # ====== Look for signatures file =====================================
      if [ "${signature}" != "" ] ; then
         rm -f "${signature}"
         if wget -q "${location}/${signature}" -O "${signature}" ; then
            if ! gpg --verify "${signature}" "${checksums}" ; then
               rm -f "${checksums}" "${signature}"
               return 1
            fi
         else
            rm -f "${checksums}" "${signature}"
            return 1
         fi
      fi

      # ====== Get ISO checksum =============================================
      if [[ "${checksums}" =~ FreeBSD ]] ; then
         sum="$(grep "${iso})" "${checksums}" | sed -e 's/^.* = //g')"
      elif [[ "${iso}" =~ ubuntu ]] ; then
         i2="${iso//\.0-/-}"
         sum="$(grep "${i2}$" "${checksums}" | cut -d' ' -f1)"
      else
         sum="$(grep "${iso}$" "${checksums}" | cut -d' ' -f1)"
      fi

      # ====== Found newer ISO ==============================================
      if [ "${sum}" != "" ] ; then
         latestURL="${location}/${iso}"
         latestChecksum="${sum}"
         latestMajor=${major}
         latestMinor=${minor}
         rm -f "${checksums}" "${signature}"

         # ====== Increment minor version ===================================
         minor=$((minor+1))
         if [ "${system}" == "Debian" ] && [ "${major}.${minor}" == "12.3" ] ; then
            minor=4   # Fix: Debian 12.3 does not exist!
         fi

         return 0
      fi

   fi

   # ====== No checksums file => try next major version =====================
   rm -f "${checksums}"
   if [ ${minor} -gt 0 ] ; then
      process-result
   else
      return 1
   fi
   if [[ "${major}" =~ [\.] ]] ; then   # Ubuntu version: e.g. 24.04
      a="${major//[\.]*/}"
      b="${major//[0-9]*\./}"

      # NOTE: Iterating LTS versions only!
      a=$((a+2))
      major="${a}.${b}"
   else
      major=$((major+1))   # Debian version: just a number
   fi
   minor=0
}


# ###### Find Debian ISOs ###################################################
function find-debian-isos ()
{
   system="Debian"
   major=10
   minor=13
   latestURL=""
   latestChecksum=""
   latestMajor=""
   latestMinor=""
   while true ; do
      location1="https://cdimage.debian.org/cdimage/archive/${major}.${minor}.0/amd64/iso-cd"
      location2="https://cdimage.debian.org/cdimage/release/${major}.${minor}.0/amd64/iso-cd"
      iso1="debian-${major}.${minor}.0-amd64-netinst.iso"
      algorithm="sha512"
      checksums="SHA512SUMS"
      signature="SHA512SUMS.sign"
      find-isos || return 0
    done
}


# ###### Find Ubuntu ISOs ###################################################
function find-ubuntu-isos ()
{
   system="Ubuntu"
   major=20.04
   minor=6
   latestURL=""
   latestChecksum=""
   latestMajor=""
   latestMinor=""
   while true ; do
      location1="https://releases.ubuntu.com/${major}.${minor}"
      location2="https://old-releases.ubuntu.com/releases/${major}"
      iso1="ubuntu-${major}.${minor}-live-server-amd64.iso"
      algorithm="sha256"
      checksums="SHA256SUMS"
      signature="SHA256SUMS.gpg"
      find-isos || return 0
    done
}


# ###### Find Fedora ISOs ###################################################
function find-fedora-isos ()
{
   system="Fedora"
   major=38
   latestURL=""
   latestChecksum=""
   latestMajor=""
   latestMinor=""
   while true ; do
      location="https://mirrors.xtom.de/fedora/releases/${major}/Server/x86_64/iso"
      isoPattern="Fedora-Server-netinst-x86_64-${major}-.*\.iso"

      rm -rf "F${major}"
      if wget --quiet -P "F${major}" --recursive --no-parent --level 1 --accept-regex '.*-CHECKSUM$' "${location}" ; then
         checksums="$(find "F${major}" -name "*-CHECKSUM" | head -n1)"
         gpg --verify "${checksums}"

         latestMajor=${major}
         latestMinor=""
         iso="$(grep "^SHA.*${isoPattern}" "${checksums}" | sed -e "s/.*(\(.*\)) = .*/\1/g")"
         latestURL="${location}/${iso}"
         latestChecksum="$(grep "^SHA.*${isoPattern}" "${checksums}" | sed -e 's/^.* = //g')"
         algorithm="$(grep "^SHA.*${isoPattern}" "${checksums}" | cut -d' ' -f1 | tr [:upper:] [:lower:])"

         process-result
         rm -rf "F${major}"
      else
         rm -rf "F${major}"
         return 0
      fi

      major=$((major+1))
   done
}


# ###### Find FreeBSD ISOs ##################################################
function find-freebsd-isos ()
{
   system="FreeBSD"
   major=13
   minor=3
   variant="$1"
   latestURL=""
   latestChecksum=""
   latestMajor=""
   latestMinor=""
   while true ; do
      location1="https://download.freebsd.org/ftp/releases/ISO-IMAGES/${major}.${minor}"
      location2=""
      iso1="FreeBSD-${major}.${minor}-${variant}-amd64-disc1.iso"
      algorithm="sha512"
      checksums="CHECKSUM.SHA512-FreeBSD-${major}.${minor}-${variant}-amd64"
      signature=""
      find-isos || return 0
    done
}



# ###### Main program #######################################################
find-debian-isos
find-ubuntu-isos
find-fedora-isos
find-freebsd-isos RELEASE
